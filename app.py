# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XKHfTDAv428br7_KETRoG1vxrW60PlOl
"""

import streamlit as st
import numpy as np
import pickle
from tensorflow.keras.models import load_model

# =============================
# Load Model ANN, DNN, dan Scaler
# =============================
try:
    model_ann = load_model("model_ann.h5")
    model_dnn = load_model("model_dnn.h5")
    scaler = pickle.load(open("scaler.pkl", "rb"))
except Exception as e:
    st.error(f"Terjadi kesalahan saat memuat model atau scaler: {e}")
    st.stop()

# =============================
# Judul Aplikasi
# =============================
st.title("Prediksi Risiko Diabetes")
st.markdown("Masukkan data pasien untuk memprediksi kemungkinan terkena diabetes menggunakan model ANN dan DNN.")

# =============================
# Form Input
# =============================
gender = st.selectbox("Jenis Kelamin", ["Perempuan", "Laki-Laki"])
age = st.number_input("Usia", min_value=1, max_value=120)
hypertension = st.selectbox("Hipertensi", ["Tidak", "Ya"])
heart_disease = st.selectbox("Penyakit Jantung", ["Tidak", "Ya"])
smoking_history = st.selectbox("Riwayat Merokok", ["Tidak Pernah", "Dulu Pernah", "Sekarang Merokok"])
bmi = st.number_input("BMI", min_value=10.0, max_value=60.0)
hba1c_level = st.number_input("HbA1c Level", min_value=3.0, max_value=15.0)
glucose = st.number_input("Blood Glucose Level", min_value=50.0, max_value=300.0)

# =============================
# Format Input Data
# =============================
input_data = np.array([
    1 if gender == "Laki-Laki" else 0,
    age,
    1 if hypertension == "Ya" else 0,
    1 if heart_disease == "Ya" else 0,
    {"Tidak Pernah": 0, "Dulu Pernah": 1, "Sekarang Merokok": 2}[smoking_history],
    bmi,
    hba1c_level,
    glucose
]).reshape(1, -1)

# =============================
# Prediksi Model
# =============================
if st.button("Prediksi dengan ANN dan DNN"):
    try:
        scaled_input = scaler.transform(input_data)

        pred_ann = model_ann.predict(scaled_input)[0][0]
        pred_dnn = model_dnn.predict(scaled_input)[0][0]

        st.subheader("Hasil Prediksi:")

        st.write(f"ðŸ“˜ **ANN**: {'Berisiko Diabetes' if pred_ann >= 0.5 else 'Tidak Berisiko'} ({pred_ann:.2f})")
        st.write(f"ðŸ“— **DNN**: {'Berisiko Diabetes' if pred_dnn >= 0.5 else 'Tidak Berisiko'} ({pred_dnn:.2f})")

    except Exception as e:
        st.error(f"Terjadi kesalahan saat prediksi: {e}")